UserInterface verification commands:-->
		These commands capture application behaviour at runtime, And allow to verify
		expected behaviour match with actual behaviour.
		
		1. Page verification commands
				getTitle
				getCurrentUrl
				getPageSource
				getWindowHandle
				getWindowHandles
				
		2. Element verification commands
				getText
				getAttribute
				getCssvalue
				getLocation
				getSize
				getTagname
==========================================================================>>
getTitle:--->
			Method capture current window title at runtime.
			In web application every page contain independent title.
		
			Syntax:-->
					String Runtime_title=driver.getTitle();
					System.out.println(Runtime_title);										
====================================================================
		
getCurrenturl:-->
				method capture current window Url at runtime.
				In web application every page contains uniqe URL.
			
			Syntax:-->
					String Runtime_url=driver.getCurrentUrl();
					System.out.println(Runtime_url);					
=====================================================================		
getPageSource:--->
		
			Method capture Entire pageSource into String format
			during runtime.  [Backend HTML source]
			
			With in soruce we can verify
					Title of a page
					url of a page
					Element ID's
					page Text
					
					
			String pageSource=driver.getpageSource();
			System.out.println(pageSoruce);				
			
================================================================		
getwindowhandle:---->
	
			Method return runtime dynamic ID of current window.			
			Method helps to swicth window controls at runtime.
			
			
			String window_Id=driver.getwindowHandle();
			System.out.println(window_Id);
			
================================================================
			
getwindowhandles:-->
			Method capture all window controls opened throw
			webdriver script.
			
			
			Set<String> allwidows=driver.getWindowhandles();
===================================================================
getText:--->
			Method capture selected element innertext at runtime.
			[capture only visible text of webpage].
			
			
			Syntax:--->
				  WebElement Element=driver.findElement(By.id("x"));
				  String Element_text=Element.getText();
				  System.out.println(Element_text);
				  
				  Note:--> if selected element not contains any text, gettext
				  			method return empty status.
				  
				  Note:--> Method capture selected element and it's child
							outtertext.	
					
					Que:-->What we can verify with gettext?..  
							
							* We can verify Status messages visible at webpage
							* We can verify error messages visible at webpage
							* We can verify expected text visible at webpage
							* We can capture and verify selected area visible at webpage.
===========================================================================================
getAttribute("propertyname");
	
			Method capture runtime attribute value using attributename.
				  
				  
				Syntax:-->  
				  	WebElement Element=driver.findElement(By.id("x"));
				  	String value=Element.getAttribute("attributename");
				  	System.out.println(value);	
				  	
				  	Note:--> Developer use attributes to chanage runtime
				  			behaviour of element. by capture element attributes
				  			at runtime we can prove element behaviour available
				  			w.r.t client requirement.
			
		
Example:-->
			   Captrue editbox input value.
			   
			   	Syntax:-->  
			   	//Identify Editbox
				WebElement Editbox=driver.findElement(By.id("x"));	
					
				//Get Input from Edtibox
				String InputData=Editbox.getAttribute("value");
				System.out.println(InputData);
====================================================================   
 getCssvalue:-->
				Method capture selected element styles at webpages.
						font
						font-size
						color
						background-color
						alignment
			Syntax:-->
				
			//Identify Element
			WebElement Element=driver.findElement(By.id("x"));
					
			String text_font_size=Element.getCssvalue("font-size");	
			System.out.println(text_font_size);			
					
		/*
		 * Note:-->
		 * 			getCssvalue method capture color in RGB [OR] RGBA format.
		 * 			Convert Expected value from Hex format to RGBA format.
		 * 				URL:-->  http://hex2rgba.devoth.com/
		 */
============================================================================
getTagname:--->
				Method capture selected element tagname at runtime
				
				Syntax:-->
				
					//Identify Element
					WebElement Element=driver.findElement(By.id("x"));
					
					String Runtime_tagname=Element.getTagname();
==============================================================================
getLocation:--->
				Method capture selected element location at webpage
				and return x and y coordinates of object
				
				Note:--> getLocation return type is point. Point return
						 object x and y coordinates.
	
				Syntax:-->
				
					//Identify Element
					WebElement Element=driver.findElement(By.id("x"));
					
					Point Obj_point=Element.getLocation();
		
					//using object point get x and y coordinates
					int obj_x=Obj_point.getX();
					System.out.println("Object x coordinates  "+obj_x);
					
					int obj_y=Obj_point.getY();
					System.out.println("Object y coordinates  "+obj_y);
================================================================================
getsize:-->
				Method capture selected element dimension at webpage
				and dimesnion return height and width of object.
				
				
				Syntax:-->
				
					//Identify Element
					WebElement Element=driver.findElement(By.id("x"));
					
					Dimension Obj_dimension=Element.getSize();
		
					//using object dimension get object height and width
					int obj_height=Obj_dimension.getheight();
					System.out.println("Object height is "+obj_height);
					
					int obj_width=Obj_dimension.getWidth();
					System.out.println("Object width is "+obj_width);
==========================================================================>
Validation Commands:-->

		In selenium all validation commands verify any web element
		behaviour and return boolean value true/false
		
		List of validation Commands available:-->
		
			IsDisplayed
			IsSelected
			IsEnabeld
			
==========================================>>
=>isDisplayed:-->
			Method verify element visibility or hidden state
			and return boolean value true/ false during runtime...
				
				
		syntax:-->
				WebElement Element=driver.findElement(By.id("X"));
					
				boolean flag=Element.isDisplayed();
				system.out.println("Element visible Status  "+flag);
				
============================================>
=> IsEnabled:-->
		 Method verify element enabled or disabled status and return
		 boolean value true/false.
		 
		 syntax:-->
				WebElement Element=driver.findElement(By.id("X"));
					
				boolean flag=Element.isEnabled();
				system.out.println("Element Enabled Status  "+flag);
						
===================================================>
Isselected:-->
			Method return true/false  on element selection state
			for radio button and checkboxes.
			
			Syntax:-->
					//Identify Element
					WebElement Element=driver.findElement(By.id("x"));
					
					boolean flag=Element.Isselected();
					System.out.println("Element Selected "+flag);
====================================================>>



Example:--> checkbox selection using webdriver...	

to deselect checkbox :---->

			//Identify Element
			WebElement Checkbox=driver.findElement(By.id("x"));
	
			if(Checkbox.isSeelcted())
			{
				Checkbox.click();
			}
	
to select checkbox:-->

			//Identify Element
			WebElement Checkbox=driver.findElement(By.id("x"));
	
			if(!Checkbox.isSeelcted())  //!--NOT
			{
				Checkbox.click();
			}
		
		
		
		
		
		